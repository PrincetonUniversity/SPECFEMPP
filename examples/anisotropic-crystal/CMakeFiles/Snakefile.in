SPECFEM_BIN = "specfem2d"
MESHFEM_BIN = "xmeshfem2D"


rule all:
    input:
        plot="@CMAKE_SOURCE_DIR@/examples/anisotropic-crystal/OUTPUT_FILES/results/plot.png",
    localrule: True


rule generate_mesh:
    input:
        "Par_File",
    output:
        database="@CMAKE_SOURCE_DIR@/examples/anisotropic-crystal/OUTPUT_FILES/database.bin",
        stations="@CMAKE_SOURCE_DIR@/examples/anisotropic-crystal/OUTPUT_FILES/STATIONS",
    localrule: True
    shell:
        """
            mkdir -p OUTPUT_FILES
            {MESHFEM_BIN} -p {input}
        """


rule run_solver:
    input:
        database="@CMAKE_SOURCE_DIR@/examples/anisotropic-crystal/OUTPUT_FILES/database.bin",
        stations="@CMAKE_SOURCE_DIR@/examples/anisotropic-crystal/OUTPUT_FILES/STATIONS",
        source="sources.yaml",
        config="specfem_config.yaml",
    output:
        seismograms=expand(
            "OUTPUT_FILES/results/{station_name}{network_name}{component}.semd",
            station_name=[
                "S0001",
                "S0002",
                "S0003",
                "S0004",
                "S0005",
                "S0006",
                "S0007",
                "S0008",
                "S0009",
                "S0010",
                "S0011",
                "S0012",
                "S0013",
                "S0014",
                "S0015",
                "S0016",
                "S0017",
                "S0018",
                "S0019",
                "S0020",
                "S0021",
                "S0022",
                "S0023",
                "S0024",
                "S0025",
                "S0026",
                "S0027",
                "S0028",
                "S0029",
                "S0030",
                "S0031",
                "S0032",
                "S0033",
                "S0034",
                "S0035",
                "S0036",
                "S0037",
                "S0038",
                "S0039",
                "S0040",
                "S0041",
                "S0042",
                "S0043",
                "S0044",
                "S0045",
                "S0046",
                "S0047",
                "S0048",
                "S0049",
                "S0050",
            ],
            network_name=["AA"],
            component=["BXX", "BXZ"],
        ),
    resources:
        nodes=1,
        tasks=1,
        cpus_per_task=1,
        runtime=10,
    shell:
        """
            # module purge
            # module load boost/1.73.0
            mkdir -p OUTPUT_FILES/results
            echo "Hostname: $(hostname)" > output.log
            {SPECFEM_BIN} -p {input.config} >> output.log
        """


rule plot_seismogram:
    input:
        trace_files=expand(
            "OUTPUT_FILES/results/{station_name}{network_name}{component}.semd",
            station_name=[
                "S0001",
                "S0002",
                "S0003",
                "S0004",
                "S0005",
                "S0006",
                "S0007",
                "S0008",
                "S0009",
                "S0010",
                "S0011",
                "S0012",
                "S0013",
                "S0014",
                "S0015",
                "S0016",
                "S0017",
                "S0018",
                "S0019",
                "S0020",
                "S0021",
                "S0022",
                "S0023",
                "S0024",
                "S0025",
                "S0026",
                "S0027",
                "S0028",
                "S0029",
                "S0030",
                "S0031",
                "S0032",
                "S0033",
                "S0034",
                "S0035",
                "S0036",
                "S0037",
                "S0038",
                "S0039",
                "S0040",
                "S0041",
                "S0042",
                "S0043",
                "S0044",
                "S0045",
                "S0046",
                "S0047",
                "S0048",
                "S0049",
                "S0050",
            ],
            network_name=["AA"],
            component=["BXX", "BXZ"],
        ),
    output:
        traces="OUTPUT_FILES/results/plot.png",
    localrule: True
    run:
        import glob
        import os
        import numpy as np
        import obspy
        import matplotlib
        matplotlib.use("agg")

        def get_traces(directory):
            traces = []
            files = glob.glob(directory + "/*.sem*")
            ## iterate over all seismograms
            for filename in files:
                station_name = os.path.splitext(filename)[0]
                station_name = station_name.split("/")[-1]
                trace = np.loadtxt(filename, delimiter=" ")
                starttime = trace[0, 0]
                dt = trace[1, 0] - trace[0, 0]
                traces.append(
                    obspy.Trace(
                        trace[:, 1],
                        {"network": station_name, "starttime": starttime, "delta": dt},
                    )
                )

            stream = obspy.Stream(traces)

            return stream


        stream = get_traces("OUTPUT_FILES/results")
        stream.plot(size=(800, 1000)).savefig(output.traces)


rule clean:
    shell:
        """
            rm -rf OUTPUT_FILES
        """
